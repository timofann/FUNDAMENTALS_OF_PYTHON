# Решить с помощью генераторов списка.

# 01: Даны два списка фруктов. Получить список фруктов, присутствующих в обоих исходных списках.
# Примечание: Списки фруктов создайте вручную в начале файла.

print('01. Список общих фруктов.\n')

Anna_fruits = ['Apple', 'Banana', 'Orange', 'Pineapple']
print(Anna_fruits, end='; ')
Kate_fruits = ['Pear', 'Banana', 'Lemon', 'Apple']
print(Kate_fruits, end=' -> ')

print([fruit for fruit in Anna_fruits if fruit in Kate_fruits], end='\n\n')

# 02: Дан список, заполненный произвольными числами. Получить список из элементов исходного, удовлетворяющих следующим 
# условиям:
# Элемент кратен 3,
# Элемент положительный,
# Элемент не кратен 4.
# Примечание: Список с целыми числами создайте вручную в начале файла. Не забудьте включить туда отрицательные числа. 
# 10-20 чисел в списке вполне достаточно.

print('02. Выборки.\n')

numbers = [1, 2, 5, 8, -7, -2, 0, -9, 3, 65, 43, 44, 16, 100, 11, -5]
print(numbers, end='\n\n')

print('a. Список чисел, кратных 3:    ', [number for number in numbers if not number % 3])
print('b. Список положительных чисел: ', [number for number in numbers if number >= 0])
print('c. Список чисел, не кратных 4: ', [number for number in numbers if number % 4], end='\n\n')

# 03. Напишите функцию которая принимает на вход список. Функция создает из этого списка новый список из квадратных 
# корней чисел (если число положительное) и самих чисел (если число отрицательное) и возвращает результат (желательно 
# применить генератор и тернарный оператор при необходимости). В результате работы функции исходный список не должен 
# измениться.
# Например:
# old_list = [1, -3, 4]
# result = [1, -3, 2]
# Примечание: Список с целыми числами создайте вручную в начале файла. Не забудьте включить туда отрицательные
# числа. 10-20 чисел в списке вполне достаточно.

print('03. Квадратный корень из положительных элементов.\n')


def make_list(some_list):
    return [number if number <= 0 else number**(1/2) for number in some_list]


old_list = [1, 8, -7, -2, 0, 16, 100, 11, -5, 9]
print(old_list, end=' ->\n')
print(make_list(old_list), end='\n\n')

# 04. Написать функцию которая принимает на вход число от 1 до 100. Если число равно 13, функция поднимает
# исключительную ситуации ValueError иначе возвращает введенное число, возведенное в квадрат.
# Далее написать основной код программы. Пользователь вводит число. Введенное число передаем параметром в написанную 
# функцию и печатаем результат, который вернула функция. Обработать возможность возникновения исключительной ситуации, 
# которая поднимается внутри функции.

print('04. Обработка исключения.\n')


def bakers_dozen(number):
    if number != 13:
        return number ** 2
    raise ValueError


while True:
    try:
        my_number = int(input('Введите число от 1 до 100 или что угодно, чтобы выйти: '))
        if 100 > my_number < 1:
            raise ValueError
    except ValueError:
        print('Вы вышли из программы.')
        break
    try:
        print(f'Число в квадрате: {bakers_dozen(my_number)}\n')
    except ValueError:
        print('Вы задали число 13!!!\n')


